{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyOg3w6oJ2Z9YKv9kdQPjuAv"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"hUt7EFJK8Qa5"},"outputs":[],"source":[]},{"cell_type":"code","source":["#EXPERIMENT 8 : Develop user profiles using different learning methods  and compare their performance.\n","\n","import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","from sklearn.cluster import KMeans\n","from sklearn.decomposition import PCA, NMF\n","from sklearn.metrics import (\n","    silhouette_score,\n","    mean_squared_error,\n","    davies_bouldin_score,\n","    calinski_harabasz_score\n",")\n","\n","# --------------------- Load datasets ---------------------\n","users_df = pd.read_excel('Users.xlsx')\n","books_df = pd.read_excel('Books.xlsx')\n","ratings_df = pd.read_excel('Ratings.xlsx')\n","\n","# --------------------- Drop missing values ---------------------\n","for df in [users_df, books_df, ratings_df]:\n","    df.dropna(inplace=True)\n","\n","# --------------------- Convert datetime columns to numerical ---------------------\n","def convert_datetime_to_numeric(df):\n","    for col in df.select_dtypes(include=['datetime64']):\n","        df[col] = pd.to_datetime(df[col]).astype(int) // 10**9\n","\n","convert_datetime_to_numeric(users_df)\n","convert_datetime_to_numeric(books_df)\n","convert_datetime_to_numeric(ratings_df)\n","\n","# --------------------- Ensure proper data types ---------------------\n","ratings_df['User_id'] = ratings_df['User_id'].astype(str)\n","ratings_df['ISBN'] = ratings_df['ISBN'].astype(str)\n","ratings_df['Ratings'] = pd.to_numeric(ratings_df['Ratings'], errors='coerce')\n","\n","users_df['User_id'] = users_df['User_id'].astype(str)\n","books_df['ISBN'] = books_df['ISBN'].astype(str)\n","books_df['Title'] = books_df['Title'].astype(str)\n","\n","# --------------------- Merge datasets ---------------------\n","merged_df = ratings_df.merge(users_df, on='User_id', how='inner').merge(books_df, on='ISBN', how='inner')\n","\n","# --------------------- Pivot table for user-item interaction ---------------------\n","user_item_matrix = merged_df.pivot_table(index='User_id', columns='Title', values='Ratings', fill_value=0)\n","\n","# --------------------- Apply PCA ---------------------\n","num_features = min(user_item_matrix.shape)\n","pca = PCA(n_components=min(20, num_features - 1))\n","user_item_matrix_reduced = pca.fit_transform(user_item_matrix)\n","\n","# --------------------- KMeans Clustering ---------------------\n","num_samples = user_item_matrix_reduced.shape[0]\n","num_clusters = min(5, num_samples - 1) if num_samples >= 2 else 2\n","\n","kmeans = KMeans(n_clusters=num_clusters, random_state=42, n_init=10)\n","kmeans_labels = kmeans.fit_predict(user_item_matrix_reduced)\n","\n","if num_clusters > 1:\n","    silhouette_avg = silhouette_score(user_item_matrix_reduced, kmeans_labels)\n","    davies_bouldin = davies_bouldin_score(user_item_matrix_reduced, kmeans_labels)\n","    calinski_harabasz = calinski_harabasz_score(user_item_matrix_reduced, kmeans_labels)\n","else:\n","    silhouette_avg = davies_bouldin = calinski_harabasz = None\n","\n","# --------------------- NMF (Matrix Factorization) ---------------------\n","nmf_components = min(5, num_features - 1)\n","nmf = NMF(n_components=nmf_components, init='random', random_state=42)\n","W = nmf.fit_transform(user_item_matrix)\n","H = nmf.components_\n","reconstructed_matrix = np.dot(W, H)\n","\n","mse_nmf = mean_squared_error(user_item_matrix, reconstructed_matrix)\n","rmse_nmf = np.sqrt(mse_nmf)\n","\n","# --------------------- Performance Metrics ---------------------\n","methods = ['Silhouette Score', 'DBI', 'CHS', 'MSE', 'RMSE']\n","scores = [silhouette_avg, -davies_bouldin, calinski_harabasz, -mse_nmf, -rmse_nmf] if silhouette_avg is not None else ['N/A'] * 5\n","interpretations = [\n","    \"Higher values indicate better clustering separation.\",\n","    \"Lower values indicate better-defined clusters.\",\n","    \"Higher values indicate better clustering compactness.\",\n","    \"Lower values indicate better model accuracy.\",\n","    \"Lower values indicate better reconstruction quality.\"\n","]\n","\n","metrics_df = pd.DataFrame({\n","    'Metric': methods,\n","    'Score': scores,\n","    'Interpretation': interpretations\n","})\n","\n","# --------------------- Display Metrics Table ---------------------\n","print(metrics_df)\n","\n","# --------------------- Plot Performance ---------------------\n","plt.figure(figsize=(10, 6))\n","bars = plt.bar(methods, scores, color=['blue', 'green', 'purple', 'red', 'cyan'],\n","               alpha=0.7, edgecolor='black', width=0.5)\n","\n","plt.xlabel('Metric', fontsize=12, fontweight='bold')\n","plt.ylabel('Score', fontsize=12, fontweight='bold')\n","plt.title('Comparison of Learning Methods', fontsize=14, fontweight='bold')\n","plt.xticks(rotation=15, fontsize=10)\n","plt.grid(axis='y', linestyle='--', alpha=0.6)\n","plt.axhline(y=0, color='black', linewidth=1)\n","\n","# Annotate bars\n","for bar, score in zip(bars, scores):\n","    if score != 'N/A':\n","        plt.text(bar.get_x() + bar.get_width() / 2, bar.get_height(),\n","                 f'{score:.4f}', ha='center', va='bottom', fontsize=10, fontweight='bold')\n","\n","plt.show()\n","\n","# --------------------- Recommendation Function ---------------------\n","def recommend_books(user_id, user_item_matrix, W, H, books_df, top_n=5):\n","    if user_id not in user_item_matrix.index:\n","        return pd.DataFrame(columns=['Title', 'Author'])\n","\n","    user_index = user_item_matrix.index.get_loc(user_id)\n","    predicted_ratings = np.dot(W[user_index, :], H)\n","\n","    rated_books = user_item_matrix.loc[user_id] > 0\n","    unrated_books = np.where(~rated_books)[0]\n","\n","    recommended_indices = unrated_books[np.argsort(predicted_ratings[unrated_books])][-top_n:]\n","    recommended_books = user_item_matrix.columns[recommended_indices]\n","\n","    recommended_books_df = books_df[books_df['Title'].isin(recommended_books)][['Title', 'Author']]\n","    return recommended_books_df\n","\n","# --------------------- Display Recommendations ---------------------\n","user_id = '27'\n","recommended_books = recommend_books(user_id, user_item_matrix, W, H, books_df)\n","\n","print(f'\\nRecommended books for user ID {user_id}:')\n","print(recommended_books)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":910},"id":"vCaLTgUXxCMb","executionInfo":{"status":"ok","timestamp":1746339523659,"user_tz":-330,"elapsed":6791,"user":{"displayName":"000 111","userId":"14195104500313090051"}},"outputId":"5ec3b1b7-114d-4721-ae90-45c39d39ebbb"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["             Metric     Score  \\\n","0  Silhouette Score  0.046008   \n","1               DBI -0.408719   \n","2               CHS  2.293333   \n","3               MSE -0.084586   \n","4              RMSE -0.290837   \n","\n","                                      Interpretation  \n","0  Higher values indicate better clustering separ...  \n","1     Lower values indicate better-defined clusters.  \n","2  Higher values indicate better clustering compa...  \n","3       Lower values indicate better model accuracy.  \n","4  Lower values indicate better reconstruction qu...  \n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n","Recommended books for user ID 27:\n","Empty DataFrame\n","Columns: [Title, Author]\n","Index: []\n"]}]}]}